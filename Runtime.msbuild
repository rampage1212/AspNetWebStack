<Project DefaultTargets="UnitTest" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration>

        <!-- TODO: CodeAnalysis is off by default in VS11 because FxCop cannot load custom rules built against Dev10 -->
        <CodeAnalysis Condition=" '$(CodeAnalysis)' == '' and '$(VS110COMNTOOLS)' == ''">true</CodeAnalysis>

        <StyleCopEnabled Condition=" '$(StyleCopEnabled)' == '' ">true</StyleCopEnabled>
        <BuildInParallel Condition=" '$(BuildInParallel)' == '' And $(MSBuildNodeCount) &gt; 1 ">true</BuildInParallel>
        <BuildInParallel Condition=" '$(BuildInParallel)' == '' ">false</BuildInParallel>
        <TestResultsDirectory>$(MSBuildThisFileDirectory)bin\$(Configuration)\test\TestResults\</TestResultsDirectory>
    </PropertyGroup>

    <Target Name="Integration" DependsOnTargets="Clean;Build;UnitTest" />

    <Target Name="Clean">
        <MSBuild
            Projects="Runtime.sln"
            Targets="Clean"
            Properties="Configuration=$(Configuration)" />
        <RemoveDir Directories="bin\$(Configuration)" />
    </Target>

    <Target Name="Prereq">
        <ItemGroup>
            <RestoreCsProjFiles
                Include="test\Microsoft.Web.Http.Data.Test\*.csproj;
                         src\System.Web.WebPages.Administration\*.csproj;
                         src\System.Web.WebPages.Deployment\*.csproj;
                         src\Microsoft.Web.WebPages.OAuth\*.csproj" />
        </ItemGroup>

        <Message Text="Restoring NuGet packages..." Importance="High" />
        <MSBuild Projects="@(RestoreCsProjFiles)" Targets="RestorePackages" StopOnFirstFailure="true" />
        <MSBuild Projects=".nuget\nuget.targets" Targets="RestoreBinaryDependencies" />
    </Target>

    <Target Name="RestorePackages">
        <SetEnvironmentVariable EnvKey="EnableNuGetPackageRestore" EnvValue="true" />
        <CallTarget Targets="Prereq" />
    </Target>

    <Target Name="Build" DependsOnTargets="Prereq">
        <MakeDir Directories="bin\$(Configuration)" />
        <MSBuild
            Projects="Runtime.sln"
            BuildInParallel="$(BuildInParallel)"
            Targets="Build"
            Properties="Configuration=$(Configuration);CodeAnalysis=$(CodeAnalysis);StyleCopEnabled=$(StyleCopEnabled)" />
    </Target>

    <Target Name="UnitTest" DependsOnTargets="Build">
        <ItemGroup>            
            <TestDLLsXunit Include="bin\$(Configuration)\test\*.Test.dll;bin\$(Configuration)\test\*.Test.*.dll" Exclude="**\SPA.Test.dll" />
            <XunitProject Include="tools\WebStack.xunit.targets">
                <Properties>TestAssembly=%(TestDLLsXunit.FullPath);XmlPath=$(TestResultsDirectory)%(TestDLLsXunit.FileName)-XunitResults.xml</Properties>
            </XunitProject>
        </ItemGroup>
        <MakeDir Directories="$(TestResultsDirectory)" />
        <MSBuild Projects="@(XunitProject)" BuildInParallel="$(BuildInParallel)" Targets="Xunit" />
    </Target>

    <UsingTask TaskName="SetEnvironmentVariable" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
        <ParameterGroup>
            <EnvKey ParameterType="System.String" Required="true" />
            <EnvValue ParameterType="System.String" Required="true" />
        </ParameterGroup>
        <Task>
            <Using Namespace="System" />
            <Code Type="Fragment" Language="cs">
            <![CDATA[
                try { Environment.SetEnvironmentVariable(EnvKey, EnvValue, System.EnvironmentVariableTarget.Process); }
                catch { }
            ]]>
            </Code>
        </Task>
    </UsingTask>
</Project>
