<Project DefaultTargets="UnitTest" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration>

        <!-- TODO: CodeAnalysis is off by default in VS11 because FxCop cannot load custom rules built against Dev10 -->
        <CodeAnalysis Condition=" '$(CodeAnalysis)' == '' and '$(VS110COMNTOOLS)' == ''">true</CodeAnalysis>

        <StyleCopEnabled Condition=" '$(StyleCopEnabled)' == '' ">true</StyleCopEnabled>
        <BuildInParallel Condition=" '$(BuildInParallel)' == '' And $(MSBuildNodeCount) &gt; 1 ">true</BuildInParallel>
        <BuildInParallel Condition=" '$(BuildInParallel)' == '' ">false</BuildInParallel>
        <TestResultsDirectory>$(MSBuildThisFileDirectory)bin\$(Configuration)\test\TestResults\</TestResultsDirectory>
        <ExtensionsTestResultsDirectory>$(MSBuildThisFileDirectory)bin\Extensions\$(Configuration)\test\TestResults\</ExtensionsTestResultsDirectory>
    </PropertyGroup>
    
    <ItemGroup>            
        <SolutionsToBuild Include="Runtime.sln">
            <ReleaseRoot>.</ReleaseRoot>
        </SolutionsToBuild>    
        <SolutionsToBuild Include="Extensions.sln">
            <ReleaseRoot>Extensions</ReleaseRoot>
        </SolutionsToBuild>
    </ItemGroup>    

    <Target Name="Integration" DependsOnTargets="Clean;Build;UnitTest" />

    <Target Name="Clean">
        <MSBuild
            Projects="@(SolutionsToBuild)"
            Targets="Clean"
            Properties="Configuration=$(Configuration)" />
        <RemoveDir Directories="bin\%(SolutionsToBuild.ReleaseRoot)\$(Configuration)" />
    </Target>

    <Target Name="Prereq" DependsOnTargets="PreRestorePackages">
        <MSBuild Projects="@(RestoreCsProjFiles)" Targets="RestorePackages" StopOnFirstFailure="true" />
        <MSBuild Projects=".nuget\nuget.targets" Targets="RestoreBinaryDependencies" />
    </Target>

    <Target Name="PreRestorePackages">
        <ItemGroup>
            <RestoreCsProjFiles
                Include="test\Microsoft.Web.Http.Data.Test\*.csproj;
                         src\System.Web.WebPages.Administration\*.csproj;
                         src\System.Web.WebPages.Deployment\*.csproj;
                         src\Microsoft.Web.WebPages.OAuth\*.csproj" />
        </ItemGroup>
        <Message Text="Restoring NuGet packages..." Importance="High" />
    </Target>

    <Target Name="RestorePackages" DependsOnTargets="PreRestorePackages">
        <MSBuild Projects="@(RestoreCsProjFiles)" Targets="EnableRestore;RestorePackages" StopOnFirstFailure="true" />
        <MSBuild Projects=".nuget\nuget.targets" Targets="EnableRestore;RestoreBinaryDependencies" />
    </Target>

    <Target Name="Build" DependsOnTargets="Prereq">
        <MakeDir Directories="bin\%(SolutionsToBuild.ReleaseRoot)\$(Configuration)" />
        <MSBuild
            Projects="%(SolutionsToBuild.Identity)"
            BuildInParallel="$(BuildInParallel)"
            Targets="Build"
            Properties="Configuration=$(Configuration);CodeAnalysis=$(CodeAnalysis);StyleCopEnabled=$(StyleCopEnabled)" />
    </Target>

    <Target Name="UnitTest" DependsOnTargets="Build">
        <ItemGroup>            
            <TestDLLsXunit Include="bin\$(Configuration)\test\*.Test.dll;bin\$(Configuration)\test\*.Test.*.dll" Exclude="**\SPA.Test.dll">
                <ResultsDirectory>$(TestResultsDirectory)</ResultsDirectory>
            </TestDLLsXunit>
            <TestDLLsXunit Include="bin\Extensions\$(Configuration)\test\*.Test.dll">
                <ResultsDirectory>$(ExtensionsTestResultsDirectory)</ResultsDirectory>
            </TestDLLsXunit>
            <XunitProject Include="tools\WebStack.xunit.targets">
                <Properties>TestAssembly=%(TestDLLsXunit.FullPath);XmlPath=%(TestDLLsXunit.ResultsDirectory)%(TestDLLsXunit.FileName)-XunitResults.xml</Properties>
            </XunitProject>
        </ItemGroup>
        <MakeDir Directories="%(TestDLLsXunit.ResultsDirectory)" />
        <MSBuild Projects="@(XunitProject)" BuildInParallel="$(BuildInParallel)" Targets="Xunit" />
    </Target>
</Project>
